@page "/employee/{EmployeeID:int}"
@inject EmployeeManagementSystem.Client.Services.EmployeeService EmployeeService
@inject NavigationManager Navigation

<h3>@(isNew ? "Add Employee" : "Edit Employee")</h3>

<EditForm Model="employee" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label for="name">Name:</label>
        <InputText id="name" @bind-Value="employee.Name" />
    </div>
    <div>
        <label for="position">Position:</label>
        <InputText id="position" @bind-Value="employee.Position" />
    </div>
    <div>
        <label for="salary">Salary:</label>
        <InputNumber id="salary" @bind-Value="employee.Salary" />
    </div>
    <button type="submit">Save</button>
</EditForm>

@code {
    [Parameter]
    public int EmployeeID { get; set; }

    private EmployeeManagementSystem.Client.Models.Employee employee = new EmployeeManagementSystem.Client.Models.Employee();
    private bool isNew => EmployeeID == 0;

    protected override async Task OnInitializedAsync()
    {
        if (!isNew)
        {
            employee = await EmployeeService.GetEmployeeByIdAsync(EmployeeID);
        }
    }

    private async Task HandleValidSubmit()
    {
        if (isNew)
        {
            await EmployeeService.AddEmployeeAsync(employee);
        }
        else
        {
            await EmployeeService.UpdateEmployeeAsync(employee);
        }
        Navigation.NavigateTo("/employees");
    }
}